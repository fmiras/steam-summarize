import { Tooltip, TooltipProvider, TooltipTrigger, TooltipContent } from '@radix-ui/react-tooltip'
import { Info, Smile, Meh, Frown } from 'lucide-react'
import { useState, useEffect } from 'react'
import { Card, CardHeader, CardTitle, CardContent } from './ui/card'
import { cn } from '@/lib/utils'

export function ReviewSummariesCard({
  className,
  summaries,
  keyPainPoints
}: {
  className?: string
  summaries: {
    positive: string
    mixed: string
    negative: string
  }
  keyPainPoints: string[]
}) {
  const [animate, setAnimate] = useState(false)

  useEffect(() => {
    setAnimate(true)
  }, [])

  return (
    <Card className={cn(className, 'overflow-hidden')}>
      <CardHeader className="pb-2">
        <CardTitle className="flex items-center">
          Review Summaries
          <TooltipProvider>
            <Tooltip>
              <TooltipTrigger>
                <Info className="h-4 w-4 ml-2 text-muted-foreground" />
              </TooltipTrigger>
              <TooltipContent>
                <p>These summaries are generated by AI and may not reflect all opinions.</p>
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {(['positive', 'mixed', 'negative'] as const).map((sentiment) => (
            <div
              key={sentiment}
              className={`flex items-start space-x-2 p-4 rounded-lg transition-all duration-500 ease-in-out ${
                animate ? 'opacity-100 translate-x-0' : 'opacity-0 -translate-x-full'
              }`}
              style={{
                transitionDelay: `${['positive', 'mixed', 'negative'].indexOf(sentiment) * 200}ms`,
                background: `linear-gradient(135deg, 
                      ${
                        sentiment === 'positive'
                          ? 'rgba(74, 222, 128, 0.1)'
                          : sentiment === 'mixed'
                          ? 'rgba(250, 204, 21, 0.1)'
                          : 'rgba(248, 113, 113, 0.1)'
                      } 0%, 
                      transparent 100%)`
              }}
            >
              {sentiment === 'positive' ? (
                <Smile className="w-6 h-6 text-green-500 mt-1" />
              ) : sentiment === 'mixed' ? (
                <Meh className="w-6 h-6 text-yellow-500 mt-1" />
              ) : (
                <Frown className="w-6 h-6 text-red-500 mt-1" />
              )}
              <div>
                <h3
                  className={`font-semibold capitalize ${
                    sentiment === 'positive'
                      ? 'text-green-500'
                      : sentiment === 'mixed'
                      ? 'text-yellow-500'
                      : 'text-red-500'
                  }`}
                >
                  {sentiment}
                </h3>
                <p>{summaries[sentiment]}</p>
              </div>
            </div>
          ))}
        </div>
        <h3 className="font-semibold mt-4 mb-2">Key Pain Points:</h3>
        <ul className="list-disc pl-5">
          {keyPainPoints.map((point, index) => (
            <li key={index}>{point}</li>
          ))}
        </ul>
      </CardContent>
    </Card>
  )
}
